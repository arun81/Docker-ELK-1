version: '3'
networks:
    elasticsearch_network:
    frontend:
volumes:
  elasticsearch_data_local_1:
    driver: local
  elasticsearch_data_local_2:
    driver: local
services:
#
# O Elasticsearch é o servidor de busca distribuido que irá armazenar os logs.
#
  elasticsearch_node_master:
    container_name: elasticsearch_node_master
    image: docker.elastic.co/elasticsearch/elasticsearch:6.2.4
    hostname: elasticsearch_node_master
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - elasticsearch_network
    volumes:
      - elasticsearch_data_local_1:/usr/share/elasticsearch/data
      - ./elasticsearch/create-certs/certs:$CERTS_DIR_ELASTICSEARCH
    environment:
      - "ES_JAVA_OPTS=-Xmx512m -Xms512m"
      - ELASTIC_PASSWORD=$ELASTIC_PASSWORD
      - MAX_LOCKED_MEMORY=unlimited
      - cluster.name=elasticsearch_cluster
      - node.name=elasticsearch_node_master
      - node.master=true
      - node.data=true
      - network.host=0.0.0.0
      - discovery.zen.ping_timeout=30s
      - discovery.zen.minimum_master_nodes=2
      - discovery.zen.ping.unicast.hosts=elasticsearch_node_master
      - xpack.license.self_generated.type=trial 
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=true
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.security.http.ssl.key=$CERTS_DIR_ELASTICSEARCH/elasticsearch_node_master/elasticsearch_node_master.key
      - xpack.security.http.ssl.certificate=$CERTS_DIR_ELASTICSEARCH/elasticsearch_node_master/elasticsearch_node_master.crt
      - xpack.ssl.certificate_authorities=$CERTS_DIR_ELASTICSEARCH/ca/ca.crt
      - xpack.ssl.certificate=$CERTS_DIR_ELASTICSEARCH/elasticsearch_node_master/elasticsearch_node_master.crt
      - xpack.ssl.key=$CERTS_DIR_ELASTICSEARCH/elasticsearch_node_master/elasticsearch_node_master.key
    ulimits:
      memlock:
        soft: -1
        hard: -1
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s
    healthcheck:
      test: curl --cacert $CERTS_DIR_ELASTICSEARCH/ca/ca.crt -s https://localhost:9200 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5

  elasticsearch_node_worker:
    container_name: elasticsearch_node_worker
    image: docker.elastic.co/elasticsearch/elasticsearch:6.2.4
    hostname: elasticsearch_node_worker
    ports:
      - "9200"
      - "9300"
    networks:
      - elasticsearch_network
    volumes:
      - elasticsearch_data_local_2:/usr/share/elasticsearch/data
      - ./elasticsearch/create-certs/certs:$CERTS_DIR_ELASTICSEARCH
    environment:
      - "ES_JAVA_OPTS=-Xmx512m -Xms512m"
      - ELASTIC_PASSWORD=$ELASTIC_PASSWORD
      - MAX_LOCKED_MEMORY=unlimited
      - cluster.name=elasticsearch_cluster
      - node.name=elasticsearch_node_worker
      - node.master=false
      - node.data=true
      - network.host=0.0.0.0
      - discovery.zen.ping_timeout=30s
      - discovery.zen.minimum_master_nodes=2
      - discovery.zen.ping.unicast.hosts=elasticsearch_node_master
      - xpack.license.self_generated.type=trial
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=true
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.security.http.ssl.key=$CERTS_DIR_ELASTICSEARCH/elasticsearch_node_worker/elasticsearch_node_worker.key
      - xpack.security.http.ssl.certificate=$CERTS_DIR_ELASTICSEARCH/elasticsearch_node_worker/elasticsearch_node_worker.crt
      - xpack.ssl.certificate_authorities=$CERTS_DIR_ELASTICSEARCH/ca/ca.crt
      - xpack.ssl.certificate=$CERTS_DIR_ELASTICSEARCH/elasticsearch_node_worker/elasticsearch_node_worker.crt
      - xpack.ssl.key=$CERTS_DIR_ELASTICSEARCH/elasticsearch_node_worker/elasticsearch_node_worker.key
    ulimits:
      memlock:
        soft: -1
        hard: -1
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s
#
#  wait_until_ready:
#    image: docker.elastic.co/elasticsearch/elasticsearch:6.2.4
#    command: /usr/bin/true
#    depends_on: {"elasticsearch_node_master": {"condition": "service_healthy"}}
#
  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:6.2.4
    hostname: kibana
    ports:
      - "5601:5601"
    networks:
      - elasticsearch_network
      - frontend
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml
      - ./elasticsearch/create-certs/certs/kibana:$CERTS_DIR_KIBANA
    environment:
      - "LS_JAVA_OPTS=-Xmx512m -Xms512m"
#      - SERVER_NAME=kibana
#      - SERVER_HOST=0.0.0.0
#      - XPACK_MONITORING_ENABLED=true
#      - ELASTICSEARCH_USERNAME=elastic
#      - ELASTICSEARCH_PASSWORD=$KIBANA_PASSWORD
      - ELASTICSEARCH_URL=https://elasticsearch_node_master:9200
#      - xpack.monitoring.ui.container.elasticsearch.enabled=true
#      - xpack.security.sessionTimeout=600000
#      - server.ssl.enabled=true
#      - server.ssl.key=$CERTS_DIR_KIBANA/kibana.key
#      - server.ssl.certificate=$CERTS_DIR_KIBANA/kibana.crt
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
       condition: on-failure
       delay: 10s
       max_attempts: 3
       window: 120s
    depends_on:
      - elasticsearch_node_master